version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi


executors:

  py27:
    docker:
      - image: circleci/python:2.7

  py36:
    docker:
      - image: circleci/python:3.6

commands:
  run_unittest:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote --recursive
      - run:
          name: install tox
          command: pip install --user tox
      - run:
          name: Run Flake8
          command: /home/circleci/.local/bin/tox -e pep8
      - run:
         name: Run nosetest
         command: /home/circleci/.local/bin/tox -e nosetest

  check_py3_compat:
    steps:
      - run:
          name: install futurize
          command: pip install future --user
      - run:
          name: remove python3 incompatible modules
          command: |
            rm cloudify_common_sdk/_compat.py
      - run:
          name: find python3-incompatible code
          command: |
            FUTURIZE="futurize ."
            while read line; do
              [[ "$line" =~ ^#.* ]] && continue
              FUTURIZE="${FUTURIZE} ${line}"
            done<.circleci/py3fixers
            echo "Running: $FUTURIZE"
            $FUTURIZE>futurize_diffs
      - run:
          name: check that there is no python3-incompatible code
          command: |
            if [[ -s futurize_diffs ]]; then
              echo "Python-3-incompatible code found"
              cat futurize_diffs
              exit 1
            fi

  release_plugin:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote --recursive
      - run:
          name: Set Python
          command: |
            if ! pyenv -v COMMAND &> /dev/null
            then
                echo "pyenv could not be found"
                exit
            else
                pyenv global 3.6.5
            fi
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - attach_workspace:
          at: workspace
      - run: ecosystem-tests package-release --name cloudify-utilities-plugin-sdk


jobs:

  unittests_py27:
    executor: py27
    steps:
      - checkout
      - run_unittest

  unittests_py36:
    executor: py36
    steps:
      - checkout
      - run_unittest

  py3_compat:
    executor: py27
    steps:
      - checkout
      - check_py3_compat

  release:
    executor: py36
    steps:
      - checkout
      - release_plugin


workflows:
  version: 2
  tests:
    jobs: &all_jobs
      - py3_compat
      - unittests_py27
      - unittests_py36
      - release:
          filters:
            branches:
              only: /RD-3578-release-not-functional/
          requires:
            - unittests_py27
            - unittests_py36
  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * *"
        filters:
          branches:
            only:
              - master
    jobs: *all_jobs
